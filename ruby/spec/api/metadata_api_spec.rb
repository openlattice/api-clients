=begin
#OpenLattice API

#OpenLattice API

The version of the OpenAPI document: 0.0.1
Contact: support@openlattice.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::MetadataApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MetadataApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::MetadataApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MetadataApi' do
    it 'should create an instance of MetadataApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::MetadataApi)
    end
  end

  # unit tests for get_data_set_column_metadata
  # Gets the dataset column metadata objects using data ID and column ID
  # @param data_id 
  # @param column_id 
  # @param [Hash] opts the optional parameters
  # @return [DataSetColumnMetadata]
  describe 'get_data_set_column_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_data_set_columns_metadata
  # Gets all data set column metadata objects that caller has READ on that belong to given data set ids
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :request_body 
  # @return [Hash<String, Array<DataSetColumnMetadata>>]
  describe 'get_data_set_columns_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_data_set_metadata
  # Gets dataset metadata object with given data set ID
  # @param data_id 
  # @param [Hash] opts the optional parameters
  # @return [DataSetMetadata]
  describe 'get_data_set_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_data_sets_metadata
  # Gets the dataset metadata objects given data set ids the caller has READ permissions on
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :request_body 
  # @return [Hash<String, DataSetMetadata>]
  describe 'get_data_sets_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organization_data_sets_metadata
  # Gets all data set column metadata objects that caller has READ on that belong to given data set ids
  # @param organization_id 
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, DataSetMetadata>]
  describe 'get_organization_data_sets_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_data_set_column_metadata
  # Applies the given metadata updates to the data set column given dataset and column Ids. Must be OWNER of the column.
  # @param data_id 
  # @param column_id 
  # @param [Hash] opts the optional parameters
  # @option opts [DataMetadata] :data_metadata 
  # @return [nil]
  describe 'update_data_set_column_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_data_set_metadata
  # Applies the given metadata updates to the data set given data set id. Must be OWNER of the dataset.
  # @param data_id 
  # @param [Hash] opts the optional parameters
  # @option opts [DataMetadata] :data_metadata 
  # @return [nil]
  describe 'update_data_set_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
